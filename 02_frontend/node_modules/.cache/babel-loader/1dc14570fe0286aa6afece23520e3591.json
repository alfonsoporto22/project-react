{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afdm\\\\Desktop\\\\PortableGit\\\\Develop\\\\project-react\\\\02_frontend\\\\src\\\\SharedState.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from \"react\";\nimport { get } from \"./aux_api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\n/*Componente que se comparte en toda la aplicación. \r\nHacemos un get de todos los coches para compartir en todos los componentes\r\n*/\n\nexport function ContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [sharedState, setSharedState] = useState();\n  /* async function getCoches() {\r\n       const users = await get(\"http://localhost:3000/api\" + \"/allCoches/\");\r\n       setSharedContext(users)\r\n   }*/\n\n  const actions = {\n    setState: setSharedState\n  };\n  const [sharedContext, setSharedContext] = useState({\n    state: sharedState,\n    actions\n  });\n  useEffect(() => {\n    setSharedContext({\n      state: sharedState,\n      actions\n    });\n  }, [sharedState]);\n  useEffect(() => {\n    getCars();\n  }, []);\n\n  function getCars() {\n    get(\"http://localhost:3000/api\" + \"/allCoches/\").then(data => setSharedState(data.map(element => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: element.marca\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: element.precio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true))));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: sharedContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"xvcE2LX1QqNf2wRcEeFI4H4wi9w=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","get","Context","ContextProvider","children","sharedState","setSharedState","actions","setState","sharedContext","setSharedContext","state","getCars","then","data","map","element","marca","precio"],"sources":["C:/Users/afdm/Desktop/PortableGit/Develop/project-react/02_frontend/src/SharedState.jsx"],"sourcesContent":["import { useState, createContext, useEffect } from \"react\";\r\nimport { get } from \"./aux_api\";\r\nexport const Context = createContext();\r\n\r\n/*Componente que se comparte en toda la aplicación. \r\nHacemos un get de todos los coches para compartir en todos los componentes\r\n*/\r\nexport function ContextProvider({ children }) {\r\n\r\n    const [sharedState, setSharedState] = useState(\r\n        \r\n    );\r\n\r\n    /* async function getCoches() {\r\n         const users = await get(\"http://localhost:3000/api\" + \"/allCoches/\");\r\n         setSharedContext(users)\r\n     }*/\r\n\r\n    const actions = {\r\n        setState: setSharedState,\r\n    }\r\n\r\n    const [sharedContext, setSharedContext] = useState({\r\n        state: sharedState,\r\n        actions\r\n    })\r\n\r\n    useEffect(\r\n        () => {\r\n            setSharedContext({\r\n                state: sharedState,\r\n                actions\r\n            })\r\n        },\r\n        [sharedState]\r\n    )\r\n    useEffect(\r\n        () => {\r\n            getCars()  \r\n        },\r\n \r\n        []\r\n    )\r\n\r\n    function getCars() {\r\n        get(\"http://localhost:3000/api\" + \"/allCoches/\").then(\r\n            data => setSharedState(data.map(\r\n                (element) =>\r\n                    <>\r\n                        <h3>{element.marca}</h3>\r\n                        <p>{element.precio}</p>\r\n                    </>\r\n            ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={sharedContext}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,WAApB;;;AACA,OAAO,MAAMC,OAAO,gBAAGH,aAAa,EAA7B;AAEP;AACA;AACA;;AACA,OAAO,SAASI,eAAT,OAAuC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAE1C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;EAIA;AACJ;AACA;AACA;;EAEI,MAAMS,OAAO,GAAG;IACZC,QAAQ,EAAEF;EADE,CAAhB;EAIA,MAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC;IAC/Ca,KAAK,EAAEN,WADwC;IAE/CE;EAF+C,CAAD,CAAlD;EAKAP,SAAS,CACL,MAAM;IACFU,gBAAgB,CAAC;MACbC,KAAK,EAAEN,WADM;MAEbE;IAFa,CAAD,CAAhB;EAIH,CANI,EAOL,CAACF,WAAD,CAPK,CAAT;EASAL,SAAS,CACL,MAAM;IACFY,OAAO;EACV,CAHI,EAKL,EALK,CAAT;;EAQA,SAASA,OAAT,GAAmB;IACfX,GAAG,CAAC,8BAA8B,aAA/B,CAAH,CAAiDY,IAAjD,CACIC,IAAI,IAAIR,cAAc,CAACQ,IAAI,CAACC,GAAL,CAClBC,OAAD,iBACI;MAAA,wBACI;QAAA,UAAKA,OAAO,CAACC;MAAb;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAID,OAAO,CAACE;MAAZ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA,gBAFe,CAAD,CAD1B;EASH;;EAED,oBACI,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAET,aAAzB;IAAA,UACKL;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;GAtDeD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}