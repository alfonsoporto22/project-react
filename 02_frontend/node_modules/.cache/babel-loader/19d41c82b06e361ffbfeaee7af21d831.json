{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afdm\\\\Desktop\\\\PortableGit\\\\Develop\\\\project-react\\\\02_frontend\\\\src\\\\components\\\\CarCarrousel\\\\CarCarrousel.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport './CarCarrousel.css';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Link } from 'react-router-dom';\nimport { useContext } from \"react\";\nimport { Context } from \"../../SharedState\";\nimport { get } from \"../../aux_api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CarCarrousel(_ref) {\n  _s();\n\n  let {\n    vehiculos\n  } = _ref;\n  const {\n    state\n  } = useContext(Context);\n  let [coches, setCoches] = useState(\"\");\n  const [timer, setTimer] = useState(null);\n  /*\r\n  useEffect\r\n  */\n\n  useEffect(() => {\n    /**useInterval:primer parametro será una función que queramos que se ejecute \r\n     * en el tiempo que queramos. En este caso cada segundo llama a la \r\n     * función getMessages para mostrar mensajes\r\n     */\n    if (timer) clearInterval(timer);\n    const timerId = setInterval(() => getCars(), 500);\n    setTimer(timerId);\n  }, []);\n  let contador = 0;\n\n  function getCars() {\n    get(\"/api\" + \"/allCoches\").then(data => setCoches(data.map((element, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/vehiculo/\" + index,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-block w-100\",\n          src: element.img,\n          alt: \"First slide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: element.marca\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: element.precio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, contador++, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this))));\n  }\n  /*\r\n  TODO: ligaremos el Link con la imagen correcta a traves del id del\r\n  coche de la base de datos. Ejemplo: coche.id\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      className: \"carusel\",\n      children: coches\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(CarCarrousel, \"RvmSu9TlMW0Q898r6B2DOrj6j9k=\");\n\n_c = CarCarrousel;\nexport default CarCarrousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarCarrousel\");","map":{"version":3,"names":["useEffect","useState","useRef","Carousel","Link","useContext","Context","get","CarCarrousel","vehiculos","state","coches","setCoches","timer","setTimer","clearInterval","timerId","setInterval","getCars","contador","then","data","map","element","index","img","marca","precio"],"sources":["C:/Users/afdm/Desktop/PortableGit/Develop/project-react/02_frontend/src/components/CarCarrousel/CarCarrousel.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport './CarCarrousel.css';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext } from \"react\"\r\nimport { Context } from \"../../SharedState\"\r\nimport { get } from \"../../aux_api\";\r\n\r\nfunction CarCarrousel({ vehiculos }) {\r\n\r\n    const { state } = useContext(Context);\r\n\r\n    let [ coches, setCoches ] = useState(\"\");\r\n    const [timer, setTimer] = useState(null);\r\n\r\n     /*\r\n    useEffect\r\n    */\r\n    useEffect(\r\n        () => {\r\n            /**useInterval:primer parametro será una función que queramos que se ejecute \r\n             * en el tiempo que queramos. En este caso cada segundo llama a la \r\n             * función getMessages para mostrar mensajes\r\n             */\r\n            if (timer) clearInterval(timer);\r\n            const timerId = setInterval(() => getCars(), 500)\r\n            setTimer(timerId)\r\n        },\r\n        []\r\n    )\r\n    let contador = 0\r\n    function getCars() {\r\n        get(\"/api\" + \"/allCoches\").then(\r\n            data => setCoches(data.map(\r\n                (element, index) =>\r\n            <Carousel.Item key={contador++}>\r\n                <Link to={\"/vehiculo/\" + index}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={element.img}\r\n                        alt=\"First slide\"\r\n                    />\r\n                </Link>\r\n                <Carousel.Caption>\r\n                    <h3>{element.marca}</h3>\r\n                    <p>{element.precio}</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            ))\r\n        )\r\n    }\r\n    /*\r\n    TODO: ligaremos el Link con la imagen correcta a traves del id del\r\n    coche de la base de datos. Ejemplo: coche.id\r\n    */\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Carousel className=\"carusel\">\r\n                {coches}\r\n            </Carousel>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default CarCarrousel;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,oBAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,GAAT,QAAoB,eAApB;;;;AAEA,SAASC,YAAT,OAAqC;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAEjC,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACC,OAAD,CAA5B;EAEA,IAAI,CAAEK,MAAF,EAAUC,SAAV,IAAwBX,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;EAEC;AACL;AACA;;EACID,SAAS,CACL,MAAM;IACF;AACZ;AACA;AACA;IACY,IAAIa,KAAJ,EAAWE,aAAa,CAACF,KAAD,CAAb;IACX,MAAMG,OAAO,GAAGC,WAAW,CAAC,MAAMC,OAAO,EAAd,EAAkB,GAAlB,CAA3B;IACAJ,QAAQ,CAACE,OAAD,CAAR;EACH,CATI,EAUL,EAVK,CAAT;EAYA,IAAIG,QAAQ,GAAG,CAAf;;EACA,SAASD,OAAT,GAAmB;IACfX,GAAG,CAAC,SAAS,YAAV,CAAH,CAA2Ba,IAA3B,CACIC,IAAI,IAAIT,SAAS,CAACS,IAAI,CAACC,GAAL,CACd,CAACC,OAAD,EAAUC,KAAV,kBACJ,QAAC,QAAD,CAAU,IAAV;MAAA,wBACI,QAAC,IAAD;QAAM,EAAE,EAAE,eAAeA,KAAzB;QAAA,uBACI;UACI,SAAS,EAAC,eADd;UAEI,GAAG,EAAED,OAAO,CAACE,GAFjB;UAGI,GAAG,EAAC;QAHR;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI,QAAC,QAAD,CAAU,OAAV;QAAA,wBACI;UAAA,UAAKF,OAAO,CAACG;QAAb;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAIH,OAAO,CAACI;QAAZ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA,GAAoBR,QAAQ,EAA5B;MAAA;MAAA;MAAA;IAAA,QAFkB,CAAD,CADrB;EAkBH;EACD;AACJ;AACA;AACA;;;EAII,oBACI;IAAA,uBACI,QAAC,QAAD;MAAU,SAAS,EAAC,SAApB;MAAA,UACKR;IADL;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAOH;;GAzDQH,Y;;KAAAA,Y;AA4DT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}